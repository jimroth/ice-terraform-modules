server {
    listen 8000 default_server;
    # listen [::]:8000 default_server;
    server_name _;

    return 200 "healthy\n";
}

# Replace $(hostname) below with the domain name for the server

server {
    listen 80 default_server;
    # listen [::]:80 default_server;
    server_name _;

    # ELB stores the protocol used between the client 
    # and the load balancer in the X-Forwarded-Proto request header.
    # Check for 'https' and redirect if not
    if ($http_x_forwarded_proto != 'https') {
        return 301 https://$host$request_uri;
    }
 
    location = /validate {
        # vouch can run behind the same nginx-revproxy
        # May need to add "internal", and comply to "upstream" server naming
        proxy_set_header Host ${hostname};
        proxy_pass http://vouch:9090/validate;

        # vouch only acts on the request headers
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # pass X-Vouch-User along with the request
        auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;

        # these return values are used by the @error401 call
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    }

    location ~* \/(auth|login|logout) {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host ${hostname};
        proxy_pass http://vouch:9090$request_uri;
    }

    location /static {
        root /site;
    }

    location = /favicon.ico {
        root /site/static/img;
    }

    # if validate returns `401 not authorized` then forward the request to the error401block
    error_page 401 = @error401;

    location @error401 {
        # redirect to vouch for login
        return 302 https://$http_host/login?url=https://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
    }

    location = / {
	    return 301 https://$host/ice/dashboard/summary;
    }

    location = /ice/ {
	    return 301 https://$host/ice/dashboard/summary;
    }

    location = /ice/dashboard/ {
	    return 301 https://$host/ice/dashboard/summary;
    }

    location / {
        # send all requests to the '/validate' endpoint for authorization
        auth_request /validate;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://ice:8080/;
        #  may need to set
        #    auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user
        #  in this bock as per https://github.com/vouch/vouch-proxy/issues/26#issuecomment-425215810
        # set user header (usually an email)
        proxy_set_header X-User $auth_resp_x_vouch_user;
	    proxy_read_timeout 600s;
    }

    location /ice/dashboard/summary {
        # send all requests to the '/validate' endpoint for authorization
        auth_request /validate;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://ice:8080/ice/dashboard/summary;
        #  may need to set
        #    auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user
        #  in this bock as per https://github.com/vouch/vouch-proxy/issues/26#issuecomment-425215810
        # set user header (usually an email)
        proxy_set_header X-User $auth_resp_x_vouch_user;
	    proxy_read_timeout 600s;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
